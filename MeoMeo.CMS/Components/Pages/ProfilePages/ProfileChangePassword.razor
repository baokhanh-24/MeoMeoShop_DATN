@page "/profile-change-password"
@using MeoMeo.CMS.IServices
@using MeoMeo.Contract.DTOs
@using MeoMeo.Contract.DTOs.Auth
@using MeoMeo.Contract.Commons
@using MeoMeo.Shared.IServices
@using MeoMeo.Shared.Utilities
@using ButtonType = AntDesign.ButtonType
@inject ICMSAuthService AuthService
@inject IUserProfileClientService UserProfileService
@inject MessageModalService MessageModalService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<div class="content-background layout-container">
    <div class="d-flex justify-content-between mb-3">
        <Breadcrumb>
            <BreadcrumbItem Href="/">Trang chủ</BreadcrumbItem>
            <BreadcrumbItem Href="/profile">Hồ sơ cá nhân</BreadcrumbItem>
            <BreadcrumbItem>
                <a class="current">Đổi mật khẩu</a>
            </BreadcrumbItem>
        </Breadcrumb>
        <div>
            <Button Icon="@IconType.Outline.ArrowLeft" OnClick="GoBack">Quay lại</Button>
        </div>
    </div>

    <Card Title="Đổi mật khẩu" Class="mx-auto" Style="max-width: 500px;">
        <Form Model="@changePasswordModel" Layout="@FormLayout.Vertical" ValidateOnChange="true">
            <FormItem Label="Mật khẩu hiện tại" Required>
                <Input @bind-Value="changePasswordModel.CurrentPassword" Placeholder="Nhập mật khẩu hiện tại"
                    Password="true" />
            </FormItem>

            <FormItem Label="Mật khẩu mới" Required>
                <Input @bind-Value="changePasswordModel.NewPassword" Placeholder="Nhập mật khẩu mới" Password="true" />
            </FormItem>

            <FormItem Label="Xác nhận mật khẩu mới" Required>
                <Input @bind-Value="confirmPassword" Placeholder="Nhập lại mật khẩu mới" Password="true" />
            </FormItem>

            <Alert Type="AlertType.Info" ShowIcon="true" Class="mb-3">
                <MessageTemplate>
                    <div>
                        <strong>Lưu ý:</strong>
                        <ul class="mb-0 mt-2">
                            <li>Mật khẩu phải có ít nhất 6 ký tự</li>
                            <li>Nên sử dụng kết hợp chữ hoa, chữ thường, số và ký tự đặc biệt</li>
                            <li>Không sử dụng mật khẩu dễ đoán</li>
                        </ul>
                    </div>
                </MessageTemplate>
            </Alert>

            <div class="text-end">
                <Button OnClick="GoBack" Type="ButtonType.Default" Class="me-2">Hủy</Button>
                <Button Type="ButtonType.Primary" OnClick="ChangePassword" Loading="@isChanging">
                    Đổi mật khẩu
                </Button>
            </div>
        </Form>
    </Card>
</div>

@code {
    private ChangePasswordDTO changePasswordModel = new();
    private string confirmPassword = "";
    private bool isChanging = false;

    private async Task ChangePassword()
    {
        try
        {
            isChanging = true;

            // Validation
            if (string.IsNullOrWhiteSpace(changePasswordModel.CurrentPassword))
            {
                await MessageModalService.Error("Vui lòng nhập mật khẩu hiện tại!");
                return;
            }

            if (string.IsNullOrWhiteSpace(changePasswordModel.NewPassword))
            {
                await MessageModalService.Error("Vui lòng nhập mật khẩu mới!");
                return;
            }

            if (changePasswordModel.NewPassword.Length < 6)
            {
                await MessageModalService.Error("Mật khẩu mới phải có ít nhất 6 ký tự!");
                return;
            }

            if (changePasswordModel.NewPassword != confirmPassword)
            {
                await MessageModalService.Error("Mật khẩu xác nhận không khớp!");
                return;
            }

            if (changePasswordModel.CurrentPassword == changePasswordModel.NewPassword)
            {
                await MessageModalService.Error("Mật khẩu mới phải khác mật khẩu hiện tại!");
                return;
            }

            // Gọi API để đổi mật khẩu
            var result = await UserProfileService.ChangePasswordAsync(changePasswordModel);

            if (result.ResponseStatus == BaseStatus.Success)
            {
                await MessageModalService.Success("Đổi mật khẩu thành công! Vui lòng đăng nhập lại.");

                // Clear form
                changePasswordModel = new ChangePasswordDTO();
                confirmPassword = "";

                // Đăng xuất và chuyển về trang login
                await LogoutAndRedirect();
            }
            else
            {
                await MessageModalService.Error(result.Message);
            }
        }
        catch (Exception ex)
        {
            await MessageModalService.Error($"Có lỗi xảy ra khi đổi mật khẩu: {ex.Message}");
        }
        finally
        {
            isChanging = false;
        }
    }

    private async Task LogoutAndRedirect()
    {
        try
        {
            var refreshToken = await AuthService.GetRefreshTokenAsync();
            if (!string.IsNullOrEmpty(refreshToken))
            {
                var logoutRequest = new RefreshTokenRequest { RefreshToken = refreshToken };
                await AuthService.LogoutAsync(logoutRequest);
            }

            Navigation.NavigateTo("/cms/login", forceLoad: true);
        }
        catch (Exception ex)
        {
            await MessageModalService.Error($"Có lỗi xảy ra khi đăng xuất: {ex.Message}");
            Navigation.NavigateTo("/cms/login", forceLoad: true);
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/profile");
    }
}
