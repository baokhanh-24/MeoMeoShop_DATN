@page "/inventory-batch-detail/{Id:guid}"
@using MeoMeo.Contract.DTOs.Size
@using MeoMeo.Domain.Commons.Enums
@using MeoMeo.Shared.IServices;
@using MeoMeo.Contract.DTOs
@using MeoMeo.Contract.DTOs.Product
@using MeoMeo.Contract.DTOs.ProductDetail
@using MeoMeo.Shared.Utilities
@using MeoMeo.Domain.Commons
@using System.Reflection
@using System.ComponentModel.DataAnnotations
@inject IInventoryBatchClientService InventoryBatchClientService
@inject IProductDetailClientService ProductDetailClientService
@inject ISizeClientService sizeClientService
@inject NavigationManager Navigation

@code {
    [Parameter] public Guid Id { get; set; }

    private InventoryBatchDTO? batch;
    private List<(Guid Id, string DisplayName)> productItems = new();
    private List<(Guid Id, string Name)> sizeOptions = new();
    private List<(EInventoryBatchStatus Value, string Name)> inventoryBatchStatusList = new();

    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        inventoryBatchStatusList = Enum.GetValues(typeof(EInventoryBatchStatus))
            .Cast<EInventoryBatchStatus>()
            .Select(status => (
                status,
                status.GetType()
                      .GetMember(status.ToString())
                      .First()
                      .GetCustomAttribute<DisplayAttribute>()?.Name ?? status.ToString()
            )).ToList();

        try
        {
            // Load lô nhập
            batch = await InventoryBatchClientService.GetInventoryBatchByIdAsync(Id);

            if (batch != null)
            {
                // Load sản phẩm
                var productDetails = await ProductDetailClientService.GetAllProductDetailAsync(new GetListProductDetailRequestDTO());
                productItems = productDetails.Items.Select(detail => (detail.Id, detail.ProductName ?? "(Không có tên)")).ToList();

                // Load size
                var sizes = await sizeClientService.GetAllSizeAsync(new GetListSizeRequestDTO());
                sizeOptions = sizes.Items.Select(size => (size.Id, size.Value)).ToList();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Lỗi khi load dữ liệu chi tiết lô nhập: " + ex.Message);
        }

        isLoading = false;
    }

    private void GoBack() => Navigation.NavigateTo("/manage-inventoryBatch");
}

<div class="d-flex justify-content-between">
    <Breadcrumb>
        <BreadcrumbItem Href="/">Trang chủ</BreadcrumbItem>
        <BreadcrumbItem Href="/manage-inventoryBatch">Quản lý lô nhập</BreadcrumbItem>
        <BreadcrumbItem>Chi tiết</BreadcrumbItem>
    </Breadcrumb>

    <div>
        <button class="btn btn-secondary" @onclick="GoBack">
            <i class="fas fa-arrow-left"></i> Quay lại danh sách
        </button>
    </div>
</div>

@if (isLoading)
{
    <div class="text-center mt-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <p>Đang tải chi tiết lô nhập...</p>
    </div>
}
else if (batch == null)
{
    <div class="alert alert-danger mt-4" role="alert">
        Không tìm thấy lô nhập.
    </div>
}
else
{
    <div class="card p-4 mt-3">
        <h4 class="mb-3 text-primary">Chi tiết lô nhập</h4>
        <dl class="row">
            <dt class="col-sm-3">Mã lô: </dt>
            <dd class="col-sm-9">@batch.Code</dd>

            <dt class="col-sm-3">Sản phẩm: </dt>
            <dd class="col-sm-9">
                @(productItems.FirstOrDefault(p => p.Id == batch.ProductDetailId).DisplayName ?? "Không rõ")
            </dd>

            <dt class="col-sm-3">Size: </dt>
            <dd class="col-sm-9">
                @(sizeOptions.FirstOrDefault(s => s.Id == batch.SizeId).Name ?? $"Không rõ (ID: {batch.SizeId})")
            </dd>

            <dt class="col-sm-3">Giá nhập: </dt>
            <dd class="col-sm-9">@($"{batch.OriginalPrice:N0} đ")</dd>

            <dt class="col-sm-3">Số lượng: </dt>
            <dd class="col-sm-9">@batch.Quantity</dd>

            <dt class="col-sm-3">Mô tả: </dt>
            <dd class="col-sm-9">@batch.Note</dd>

            <dt class="col-sm-3">Trạng thái: </dt>
            <dd class="col-sm-9">
                @(inventoryBatchStatusList.FirstOrDefault(p => p.Value == batch.Status).Name ?? batch.Status.ToString())
            </dd>
        </dl>
    </div>
}
