================================================================================
                    PHÂN TÍCH CHI TIẾT CÁC MÀN HÌNH RAZOR
                              HỆ THỐNG MEOMEOSHOP
================================================================================

📋 TỔNG QUAN CÁC MÀN HÌNH RAZOR
================================================================================

Hệ thống MeoMeoShop có 2 ứng dụng Blazor Server chính với tổng cộng hơn 50 màn hình Razor:

1. **MeoMeo.CMS** (Content Management System) - 37 màn hình
2. **MeoMeo.PORTAL** (Customer Portal) - 15 màn hình

🎯 CHI TIẾT CÁC MÀN HÌNH MEOMEOSHOP.CMS
================================================================================

📌 1. TRANG CHỦ & DASHBOARD
--------------------------------------------------------------------------------

**Home.razor** (`/`)
- **Mục đích**: Dashboard tổng quan cho admin/employee
- **Tính năng chính**:
  * Hiển thị thống kê doanh thu hôm nay
  * Số đơn hàng hôm nay
  * Khách hàng mới
  * Đơn hàng chờ xác nhận
  * Biểu đồ doanh thu theo thời gian
  * Top sản phẩm bán chạy (hôm nay, tuần này, tháng này)
  * Thống kê đơn hàng theo trạng thái
  * Thống kê tồn kho
  * Biểu đồ tồn kho theo sản phẩm
  * Biểu đồ đơn hàng theo giờ trong ngày
- **Công nghệ**: RadzenChart, RadzenCard, RadzenStack
- **API**: IStatisticsClientService.GetDashboardStatisticsAsync()

**Login.razor** (`/cms/login`, `/login`)
- **Mục đích**: Đăng nhập vào hệ thống CMS
- **Tính năng chính**:
  * Form đăng nhập với validation
  * Kiểm tra quyền truy cập CMS (chỉ Admin và Employee)
  * Authentication state management
  * Responsive design với custom CSS
- **Công nghệ**: Ant Design Form, Custom CSS styling
- **API**: ICMSAuthService.LoginAsync()

📌 2. QUẢN LÝ SẢN PHẨM
--------------------------------------------------------------------------------

**ProductPages/Product.razor** (`/manage-product`)
- **Mục đích**: Quản lý danh sách sản phẩm
- **Tính năng chính**:
  * Hiển thị danh sách sản phẩm với pagination
  * Filter theo tên, thương hiệu, danh mục, size, giá, trạng thái
  * Sắp xếp theo nhiều tiêu chí
  * Bulk actions: kích hoạt/tạm ngưng nhiều sản phẩm
  * Expand/collapse để xem chi tiết biến thể
  * CRUD operations: Edit, View, Delete
  * Cập nhật trạng thái biến thể sản phẩm
  * Tạo QR Code cho sản phẩm và biến thể
  * Tab filtering theo trạng thái
- **Công nghệ**: Ant Design Table, Modal, Select, InputNumber
- **API**: IProductClientService.GetAllProductAsync()

**ProductPages/CreateOrUpdateProduct.razor** (`/product/create`, `/product/update/{id}`)
- **Mục đích**: Tạo mới hoặc cập nhật sản phẩm
- **Tính năng chính**:
  * Form tạo/cập nhật sản phẩm với validation
  * Upload hình ảnh sản phẩm
  * Quản lý biến thể sản phẩm (Size + Color)
  * Thiết lập giá, tồn kho, thuộc tính
  * Chọn thương hiệu, danh mục, chất liệu, mùa
- **Công nghệ**: Ant Design Form, Upload, Dynamic form controls
- **API**: IProductClientService.CreateProductAsync(), UpdateProductAsync()

**ProductPages/DetailProductView.razor** (`/product/detail/{id}`)
- **Mục đích**: Xem chi tiết sản phẩm
- **Tính năng chính**:
  * Hiển thị thông tin chi tiết sản phẩm
  * Danh sách tất cả biến thể
  * Lịch sử thay đổi
  * Thống kê bán hàng
- **Công nghệ**: Ant Design Card, Table, Timeline
- **API**: IProductClientService.GetProductByIdAsync()

📌 3. QUẢN LÝ ĐƠN HÀNG
--------------------------------------------------------------------------------

**OrderPages/OrderList.razor** (`/manage-order`)
- **Mục đích**: Quản lý danh sách đơn hàng
- **Tính năng chính**:
  * Hiển thị danh sách đơn hàng với pagination
  * Filter theo mã đơn hàng, tên khách hàng, SĐT, email, ngày tạo, phương thức thanh toán, trạng thái
  * Tab filtering theo trạng thái đơn hàng
  * Bulk actions: xác nhận, giao hàng, hoàn thành, hủy đơn
  * Expand/collapse để xem chi tiết đơn hàng
  * Cập nhật trạng thái đơn hàng với lý do hủy
  * Xem lịch sử đơn hàng
  * Xem chi tiết đơn hàng
- **Công nghệ**: Ant Design Table, Modal, Drawer, DatePicker
- **API**: IOrderClientService.GetListOrderAsync()

**OrderPages/OrderDetail.razor** (`/order-detail/{id}`)
- **Mục đích**: Xem chi tiết đơn hàng cụ thể
- **Tính năng chính**:
  * Hiển thị thông tin đơn hàng đầy đủ
  * Chi tiết sản phẩm trong đơn hàng
  * Thông tin khách hàng và địa chỉ giao hàng
  * Lịch sử thay đổi trạng thái
  * Cập nhật trạng thái đơn hàng
- **Công nghệ**: Ant Design Card, Timeline, Form
- **API**: IOrderClientService.GetOrderByIdAsync()

**OrderPages/OrderAtCounter.razor** (`/order-at-counter`)
- **Mục đích**: Tạo đơn hàng tại quầy
- **Tính năng chính**:
  * Tìm kiếm sản phẩm theo SKU/tên
  * Thêm sản phẩm vào đơn hàng
  * Tính toán tổng tiền
  * Chọn phương thức thanh toán
  * Tạo đơn hàng tại quầy
- **Công nghệ**: Ant Design Form, Table, Input
- **API**: IOrderClientService.CreateOrderAtCounterAsync()

📌 4. QUẢN LÝ KHÁCH HÀNG
--------------------------------------------------------------------------------

**CustomerPages/Customer.razor** (`/manage-customer`)
- **Mục đích**: Quản lý danh sách khách hàng
- **Tính năng chính**:
  * Hiển thị danh sách khách hàng
  * Filter theo tên, SĐT, email, trạng thái
  * Xem chi tiết khách hàng
  * Cập nhật trạng thái khách hàng
  * Lịch sử đơn hàng của khách hàng
- **Công nghệ**: Ant Design Table, Modal
- **API**: ICustomerClientService.GetAllCustomersAsync()

**CustomerPages/CustomerDetail.razor** (`/customer-detail/{id}`)
- **Mục đích**: Xem chi tiết khách hàng
- **Tính năng chính**:
  * Thông tin cá nhân khách hàng
  * Lịch sử đơn hàng
  * Địa chỉ giao hàng
  * Thống kê mua hàng
- **Công nghệ**: Ant Design Card, Table, Tabs
- **API**: ICustomerClientService.GetCustomerByIdAsync()

📌 5. QUẢN LÝ NHÂN VIÊN
--------------------------------------------------------------------------------

**EmployeesPages/EmployeesPages.razor** (`/manage-employee`)
- **Mục đích**: Quản lý danh sách nhân viên
- **Tính năng chính**:
  * Hiển thị danh sách nhân viên
  * Filter và tìm kiếm
  * CRUD operations
  * Quản lý vai trò nhân viên
- **Công nghệ**: Ant Design Table, Modal
- **API**: IEmployeesClientService.GetAllEmployeesAsync()

**EmployeesPages/AddEmployeesPages.razor** (`/employee/add`)
- **Mục đích**: Thêm nhân viên mới
- **Tính năng chính**:
  * Form thêm nhân viên với validation
  * Tạo tài khoản đăng nhập
  * Gán vai trò
  * Gửi email thông báo
- **Công nghệ**: Ant Design Form, Select
- **API**: IEmployeesClientService.CreateEmployeeAsync()

**EmployeesPages/ChangePasswordPages.razor** (`/employee/change-password`)
- **Mục đích**: Đổi mật khẩu nhân viên
- **Tính năng chính**:
  * Form đổi mật khẩu
  * Validation mật khẩu mới
  * Gửi email thông báo
- **Công nghệ**: Ant Design Form
- **API**: IEmployeesClientService.ChangePasswordAsync()

📌 6. QUẢN LÝ TỒN KHO
--------------------------------------------------------------------------------

**ImportBatchPages/ImportBatch.razor** (`/manage-import-batch`)
- **Mục đích**: Quản lý lô nhập hàng
- **Tính năng chính**:
  * Hiển thị danh sách lô nhập hàng
  * Filter theo ngày, trạng thái
  * Xem chi tiết lô nhập hàng
  * Tạo lô nhập hàng mới
- **Công nghệ**: Ant Design Table, Modal
- **API**: IImportBatchClientService.GetAllImportBatchesAsync()

**ImportBatchPages/ImportBatchDetail.razor** (`/import-batch-detail/{id}`)
- **Mục đích**: Xem chi tiết lô nhập hàng
- **Tính năng chính**:
  * Thông tin lô nhập hàng
  * Danh sách sản phẩm trong lô
  * Thống kê số lượng, giá trị
- **Công nghệ**: Ant Design Card, Table
- **API**: IImportBatchClientService.GetImportBatchByIdAsync()

**ImportBatchPages/InventoryBatchCreate.razor** (`/inventory-batch/create`)
- **Mục đích**: Tạo lô tồn kho mới
- **Tính năng chính**:
  * Form tạo lô tồn kho
  * Chọn sản phẩm và số lượng
  * Thiết lập giá nhập
  * Validation dữ liệu
- **Công nghệ**: Ant Design Form, Select
- **API**: IInventoryBatchClientService.CreateInventoryBatchAsync()

**InventoryPages/InventoryStatistics.razor** (`/inventory-statistics`)
- **Mục đích**: Thống kê tồn kho
- **Tính năng chính**:
  * Biểu đồ tồn kho theo sản phẩm
  * Thống kê sản phẩm sắp hết hàng
  * Thống kê giá trị tồn kho
  * Export báo cáo
- **Công nghệ**: RadzenChart, Ant Design Table
- **API**: IInventoryStatisticsClientService.GetInventoryStatisticsAsync()

📌 7. QUẢN LÝ KHUYẾN MÃI
--------------------------------------------------------------------------------

**PromotionPages/Promotion.razor** (`/manage-promotion`)
- **Mục đích**: Quản lý chương trình khuyến mãi
- **Tính năng chính**:
  * Hiển thị danh sách khuyến mãi
  * Filter theo trạng thái, thời gian
  * CRUD operations
  * Quản lý chi tiết khuyến mãi cho từng sản phẩm
- **Công nghệ**: Ant Design Table, Modal
- **API**: IPromotionClientService.GetAllPromotionsAsync()

**PromotionPages/PromotionCreate.razor** (`/promotion/create`)
- **Mục đích**: Tạo chương trình khuyến mãi mới
- **Tính năng chính**:
  * Form tạo khuyến mãi
  * Thiết lập thời gian áp dụng
  * Chọn sản phẩm và thiết lập giảm giá
  * Preview khuyến mãi
- **Công nghệ**: Ant Design Form, DatePicker, Select
- **API**: IPromotionClientService.CreatePromotionAsync()

📌 8. QUẢN LÝ VOUCHER
--------------------------------------------------------------------------------

**VoucherPages/Voucher.razor** (`/manage-voucher`)
- **Mục đích**: Quản lý mã giảm giá
- **Tính năng chính**:
  * Hiển thị danh sách voucher
  * Filter theo trạng thái, loại
  * CRUD operations
  * Thiết lập điều kiện sử dụng
  * Thống kê sử dụng voucher
- **Công nghệ**: Ant Design Table, Modal
- **API**: IVoucherClientService.GetAllVouchersAsync()

📌 9. QUẢN LÝ HỆ THỐNG
--------------------------------------------------------------------------------

**BrandPages/BrandPages.razor** (`/manage-brand`)
- **Mục đích**: Quản lý thương hiệu
- **Tính năng chính**:
  * CRUD operations cho thương hiệu
  * Upload logo thương hiệu
  * Quản lý thông tin thương hiệu
- **Công nghệ**: Ant Design Table, Upload
- **API**: IBrandClientService.GetAllBrandsAsync()

**CategoryPages/CategoryPages.razor** (`/manage-category`)
- **Mục đích**: Quản lý danh mục sản phẩm
- **Tính năng chính**:
  * CRUD operations cho danh mục
  * Quản lý cấu trúc danh mục
- **Công nghệ**: Ant Design Table, Tree
- **API**: ICategoryClientService.GetAllCategoriesAsync()

**SizePages/Sizes.razor** (`/manage-size`)
- **Mục đích**: Quản lý kích thước sản phẩm
- **Tính năng chính**:
  * CRUD operations cho size
  * Quản lý mã size và giá trị
- **Công nghệ**: Ant Design Table
- **API**: ISizeClientService.GetAllSizesAsync()

**ColourPages/ColourPages.razor** (`/manage-colour`)
- **Mục đích**: Quản lý màu sắc sản phẩm
- **Tính năng chính**:
  * CRUD operations cho màu sắc
  * Quản lý mã màu và tên màu
- **Công nghệ**: Ant Design Table
- **API**: IColourClientService.GetAllColoursAsync()

**MaterialPages/MaterialPages.razor** (`/manage-material`)
- **Mục đích**: Quản lý chất liệu sản phẩm
- **Tính năng chính**:
  * CRUD operations cho chất liệu
  * Quản lý thuộc tính chất liệu
- **Công nghệ**: Ant Design Table
- **API**: IMaterialClientService.GetAllMaterialsAsync()

**SeasonPages/Season.razor** (`/manage-season`)
- **Mục đích**: Quản lý mùa sản phẩm
- **Tính năng chính**:
  * CRUD operations cho mùa
  * Quản lý thông tin mùa
- **Công nghệ**: Ant Design Table
- **API**: ISeasonClientService.GetAllSeasonsAsync()

📌 10. QUẢN LÝ QUYỀN HẠN
--------------------------------------------------------------------------------

**PermissionPages/Roles.razor** (`/manage-roles`)
- **Mục đích**: Quản lý vai trò hệ thống
- **Tính năng chính**:
  * CRUD operations cho vai trò
  * Phân quyền cho vai trò
  * Quản lý quyền hạn chi tiết
- **Công nghệ**: Ant Design Table, Tree
- **API**: IRoleClientService.GetAllRolesAsync()

**PermissionPages/UserRoles.razor** (`/manage-user-roles`)
- **Mục đích**: Quản lý vai trò người dùng
- **Tính năng chính**:
  * Gán vai trò cho người dùng
  * Quản lý quyền hạn người dùng
- **Công nghệ**: Ant Design Table, Select
- **API**: IUserRoleClientService.GetUserRolesAsync()

📌 11. QUẢN LÝ ĐÁNH GIÁ
--------------------------------------------------------------------------------

**ProductReviewPages/ProductReviewManagement.razor** (`/manage-product-review`)
- **Mục đích**: Quản lý đánh giá sản phẩm
- **Tính năng chính**:
  * Hiển thị danh sách đánh giá
  * Filter theo sản phẩm, rating, trạng thái
  * Duyệt/từ chối đánh giá
  * Xem chi tiết đánh giá
- **Công nghệ**: Ant Design Table, Rate, Modal
- **API**: IProductReviewClientService.GetAllReviewsAsync()

📌 12. QUẢN LÝ CẤU HÌNH
--------------------------------------------------------------------------------

**SystemConfigPages/SystemConfigPages.razor** (`/system-config`)
- **Mục đích**: Quản lý cấu hình hệ thống
- **Tính năng chính**:
  * Cấu hình thông tin cửa hàng
  * Cấu hình email, SMS
  * Cấu hình payment gateway
  * Cấu hình GHN shipping
- **Công nghệ**: Ant Design Form, Switch
- **API**: ISystemConfigClientService.GetSystemConfigAsync()

📌 13. QUẢN LÝ HỒ SƠ
--------------------------------------------------------------------------------

**ProfilePages/Profile.razor** (`/profile`)
- **Mục đích**: Quản lý hồ sơ cá nhân
- **Tính năng chính**:
  * Xem thông tin cá nhân
  * Cập nhật thông tin
  * Upload avatar
- **Công nghệ**: Ant Design Form, Upload
- **API**: IUserProfileClientService.GetProfileAsync()

**ProfilePages/ProfileChangePassword.razor** (`/profile/change-password`)
- **Mục đích**: Đổi mật khẩu cá nhân
- **Tính năng chính**:
  * Form đổi mật khẩu
  * Validation mật khẩu hiện tại và mới
- **Công nghệ**: Ant Design Form
- **API**: IUserProfileClientService.ChangePasswordAsync()

📌 14. CÁC MÀN HÌNH KHÁC
--------------------------------------------------------------------------------

**ProductQRCode.razor** (`/product-qrcode`)
- **Mục đích**: Tạo và quản lý QR Code sản phẩm
- **Tính năng chính**:
  * Tạo QR Code cho sản phẩm
  * In QR Code
  * Quản lý QR Code đã tạo
- **Công nghệ**: PinguApps.Blazor.QRCode
- **API**: IProductClientService.GetProductForQRAsync()

**Counter.razor** (`/counter`)
- **Mục đích**: Màn hình demo counter
- **Tính năng**: Demo Blazor component
- **Công nghệ**: Basic Blazor component

**Weather.razor** (`/weather`)
- **Mục đích**: Màn hình demo weather
- **Tính năng**: Demo API call
- **Công nghệ**: Basic Blazor component

**Error.razor** (`/error`)
- **Mục đích**: Màn hình hiển thị lỗi
- **Tính năng**: Hiển thị thông báo lỗi
- **Công nghệ**: Ant Design Alert

🎯 CHI TIẾT CÁC MÀN HÌNH MEOMEOSHOP.PORTAL
================================================================================

📌 1. TRANG CHỦ KHÁCH HÀNG
--------------------------------------------------------------------------------

**Pages/Home.razor** (`/`)
- **Mục đích**: Trang chủ cho khách hàng
- **Tính năng chính**:
  * Video background banner
  * Carousel slider với call-to-action
  * Icon boxes giới thiệu dịch vụ
  * Bộ lọc sản phẩm nâng cao (sidebar)
  * Hiển thị sản phẩm với grid layout
  * Load more products functionality
  * Sản phẩm bán chạy trong tuần
  * Testimonials carousel
  * Responsive design
- **Công nghệ**: Ant Design Grid, Carousel, Card, Form
- **API**: IProductClientService.GetAllProductForPortalAsync()

📌 2. XÁC THỰC NGƯỜI DÙNG
--------------------------------------------------------------------------------

**Pages/Login.razor** (`/login`)
- **Mục đích**: Đăng nhập khách hàng
- **Tính năng chính**:
  * Form đăng nhập với validation
  * Remember me functionality
  * Redirect sau khi đăng nhập thành công
  * Responsive design
- **Công nghệ**: Ant Design Form, Custom CSS
- **API**: IAuthClientService.LoginAsync()

**Pages/Register.razor** (`/register`)
- **Mục đích**: Đăng ký tài khoản khách hàng
- **Tính năng chính**:
  * Form đăng ký với validation
  * Kiểm tra email đã tồn tại
  * Tự động đăng nhập sau khi đăng ký
  * Responsive design
- **Công nghệ**: Ant Design Form, Custom CSS
- **API**: IAuthClientService.RegisterAsync()

📌 3. QUẢN LÝ GIỎ HÀNG
--------------------------------------------------------------------------------

**Pages/CartPages/Cart.razor** (`/cart`)
- **Mục đích**: Quản lý giỏ hàng
- **Tính năng chính**:
  * Hiển thị sản phẩm trong giỏ hàng
  * Cập nhật số lượng sản phẩm
  * Xóa sản phẩm khỏi giỏ hàng
  * Tính toán tổng tiền
  * Áp dụng voucher
  * Chuyển đến trang thanh toán
- **Công nghệ**: Ant Design Table, InputNumber, Button
- **API**: ICartClientService.GetCurrentCartAsync()

📌 4. QUẢN LÝ ĐƠN HÀNG
--------------------------------------------------------------------------------

**Pages/OrderPages/CustomerOrder.razor** (`/orders`)
- **Mục đích**: Xem danh sách đơn hàng của khách hàng
- **Tính năng chính**:
  * Hiển thị đơn hàng của khách hàng
  * Filter theo trạng thái
  * Xem chi tiết đơn hàng
  * Theo dõi trạng thái đơn hàng
  * Yêu cầu hoàn trả hàng
- **Công nghệ**: Ant Design Table, Tabs, Badge
- **API**: IOrderClientService.GetCustomerOrdersAsync()

**Pages/OrderPages/OrderDetail.razor** (`/order-detail/{id}`)
- **Mục đích**: Xem chi tiết đơn hàng
- **Tính năng chính**:
  * Thông tin đơn hàng đầy đủ
  * Chi tiết sản phẩm
  * Thông tin giao hàng
  * Lịch sử trạng thái
  * Yêu cầu hoàn trả
- **Công nghệ**: Ant Design Card, Timeline, Button
- **API**: IOrderClientService.GetOrderByIdAsync()

**Pages/OrderPages/OrderReturnList.razor** (`/order-returns`)
- **Mục đích**: Quản lý yêu cầu hoàn trả hàng
- **Tính năng chính**:
  * Danh sách yêu cầu hoàn trả
  * Tạo yêu cầu hoàn trả mới
  * Theo dõi trạng thái hoàn trả
- **Công nghệ**: Ant Design Table, Modal
- **API**: IOrderReturnClientService.GetCustomerReturnsAsync()

**Pages/OrderPages/OrderReturnDetail.razor** (`/order-return-detail/{id}`)
- **Mục đích**: Xem chi tiết yêu cầu hoàn trả
- **Tính năng chính**:
  * Thông tin yêu cầu hoàn trả
  * Sản phẩm hoàn trả
  * Lý do hoàn trả
  * Trạng thái xử lý
- **Công nghệ**: Ant Design Card, Table
- **API**: IOrderReturnClientService.GetReturnByIdAsync()

📌 5. CHI TIẾT SẢN PHẨM
--------------------------------------------------------------------------------

**Pages/ProductDetail/ProductDetail.razor** (`/product/{id}`)
- **Mục đích**: Xem chi tiết sản phẩm
- **Tính năng chính**:
  * Hiển thị thông tin sản phẩm chi tiết
  * Gallery hình ảnh
  * Chọn variant (size, màu sắc)
  * Thêm vào giỏ hàng
  * Thêm vào wishlist
  * Đánh giá sản phẩm
  * Sản phẩm liên quan
- **Công nghệ**: Ant Design Image, Select, Rate, Button
- **API**: IProductClientService.GetProductDetailAsync()

📌 6. QUẢN LÝ HỒ SƠ KHÁCH HÀNG
--------------------------------------------------------------------------------

**Pages/ProfilePages/ProfileLayout.razor** (`/profile`)
- **Mục đích**: Layout chung cho các trang profile
- **Tính năng chính**:
  * Sidebar navigation cho profile
  * Responsive design
- **Công nghệ**: Ant Design Layout, Menu

**Pages/ProfilePages/ProfileInfo.razor** (`/profile/info`)
- **Mục đích**: Quản lý thông tin cá nhân
- **Tính năng chính**:
  * Xem và cập nhật thông tin cá nhân
  * Upload avatar
  * Đổi mật khẩu
- **Công nghệ**: Ant Design Form, Upload
- **API**: IUserInfoService.UpdateProfileAsync()

**Pages/ProfilePages/DeliveryAddresses.razor** (`/profile/addresses`)
- **Mục đích**: Quản lý địa chỉ giao hàng
- **Tính năng chính**:
  * Danh sách địa chỉ giao hàng
  * Thêm/sửa/xóa địa chỉ
  * Đặt địa chỉ mặc định
  * Tích hợp API địa chỉ Việt Nam
- **Công nghệ**: Ant Design Table, Modal, Cascader
- **API**: IDeliveryAddressClientService.GetCustomerAddressesAsync()

**Pages/ProfilePages/Wishlist.razor** (`/profile/wishlist`)
- **Mục đích**: Quản lý danh sách yêu thích
- **Tính năng chính**:
  * Hiển thị sản phẩm yêu thích
  * Xóa khỏi wishlist
  * Thêm vào giỏ hàng
  * Chia sẻ wishlist
- **Công nghệ**: Ant Design Card, Button
- **API**: IWishlistClientService.GetCustomerWishlistAsync()

**Pages/ProfilePages/ProductReviews.razor** (`/profile/reviews`)
- **Mục đích**: Quản lý đánh giá sản phẩm
- **Tính năng chính**:
  * Danh sách đánh giá đã viết
  * Chỉnh sửa đánh giá
  * Xóa đánh giá
- **Công nghệ**: Ant Design Table, Rate, Modal
- **API**: IProductReviewClientService.GetCustomerReviewsAsync()

📌 7. CÁC MÀN HÌNH KHÁC
--------------------------------------------------------------------------------

**Pages/Compare.razor** (`/compare`)
- **Mục đích**: So sánh sản phẩm
- **Tính năng chính**:
  * So sánh nhiều sản phẩm
  * Bảng so sánh thuộc tính
  * Thêm/xóa sản phẩm khỏi so sánh
- **Công nghệ**: Ant Design Table, Card
- **API**: IProductClientService.GetProductsForCompareAsync()

📌 8. COMPONENTS CHUNG
--------------------------------------------------------------------------------

**Pages/ProductCard/ProductCard.razor**
- **Mục đích**: Component hiển thị card sản phẩm
- **Tính năng chính**:
  * Hiển thị thông tin sản phẩm
  * Hover effects
  * Quick actions (thêm vào giỏ hàng, wishlist)
  * Responsive design
- **Công nghệ**: Ant Design Card, Button, Tag
- **Props**: LstProduct, IsGridSelected

**Pages/ProductCard/VariantSelectionModal.razor**
- **Mục đích**: Modal chọn variant sản phẩm
- **Tính năng chính**:
  * Chọn size và màu sắc
  * Hiển thị giá và tồn kho
  * Thêm vào giỏ hàng
- **Công nghệ**: Ant Design Modal, Select, Button
- **Props**: Product, Visible, OnClose

**Layout/MainLayout.razor**
- **Mục đích**: Layout chính của portal
- **Tính năng chính**:
  * Header với navigation
  * Footer
  * Responsive design
- **Công nghệ**: Ant Design Layout

**Layout/NavMenu.razor**
- **Mục đích**: Navigation menu
- **Tính năng chính**:
  * Main navigation
  * User menu
  * Cart counter
  * Search functionality
- **Công nghệ**: Ant Design Menu, Input, Badge

**Layout/UserMenu.razor**
- **Mục đích**: Menu người dùng
- **Tính năng chính**:
  * User dropdown menu
  * Profile links
  * Logout functionality
- **Công nghệ**: Ant Design Dropdown, Avatar

**Layout/FooterComponent.razor**
- **Mục đích**: Footer của trang
- **Tính năng chính**:
  * Company information
  * Social links
  * Newsletter subscription
- **Công nghệ**: Ant Design Grid, Form

**Loading/GlobalSpin.razor**
- **Mục đích**: Loading spinner toàn cục
- **Tính năng chính**:
  * Hiển thị khi đang loading
  * Customizable message
- **Công nghệ**: Ant Design Spin

🔧 CÔNG NGHỆ VÀ PATTERNS SỬ DỤNG
================================================================================

📌 UI FRAMEWORK
--------------------------------------------------------------------------------
- **Ant Design Blazor**: Component library chính
- **Radzen Blazor**: Additional components (charts, data grids)
- **Custom CSS**: Styling và responsive design
- **Bootstrap**: Grid system và utilities

📌 STATE MANAGEMENT
--------------------------------------------------------------------------------
- **Blazor Server State**: Server-side state management
- **SignalR**: Real-time updates
- **Local Storage**: Client-side persistence
- **Custom State Services**: CartStateService, AuthStateProvider

📌 DATA BINDING & VALIDATION
--------------------------------------------------------------------------------
- **Two-way Data Binding**: @bind-Value
- **Form Validation**: Ant Design Form validation
- **Custom Validation**: Business rule validation
- **Real-time Validation**: OnChange events

📌 API INTEGRATION
--------------------------------------------------------------------------------
- **HTTP Client**: API calls
- **Dependency Injection**: Service registration
- **Error Handling**: Try-catch với user-friendly messages
- **Loading States**: Loading indicators

📌 RESPONSIVE DESIGN
--------------------------------------------------------------------------------
- **Ant Design Grid**: Responsive layout
- **CSS Media Queries**: Custom responsive styles
- **Mobile-first**: Mobile-optimized design
- **Touch-friendly**: Touch interactions

📌 PERFORMANCE OPTIMIZATION
--------------------------------------------------------------------------------
- **Virtualization**: Large data sets
- **Lazy Loading**: On-demand content loading
- **Caching**: API response caching
- **Debouncing**: Search input debouncing

🎯 ĐẶC ĐIỂM NỔI BẬT CỦA CÁC MÀN HÌNH
================================================================================

📌 CMS (Content Management System)
--------------------------------------------------------------------------------
- **Comprehensive Management**: Quản lý toàn diện tất cả aspects của hệ thống
- **Advanced Filtering**: Bộ lọc phức tạp với nhiều tiêu chí
- **Bulk Operations**: Thao tác hàng loạt trên nhiều items
- **Real-time Updates**: Cập nhật real-time với SignalR
- **Role-based Access**: Phân quyền chi tiết theo vai trò
- **Audit Trail**: Theo dõi lịch sử thay đổi
- **Export/Import**: Xuất/nhập dữ liệu
- **Advanced Charts**: Biểu đồ và thống kê chi tiết

📌 PORTAL (Customer Portal)
--------------------------------------------------------------------------------
- **User-friendly Interface**: Giao diện thân thiện với người dùng
- **Mobile Responsive**: Tối ưu cho mobile
- **Shopping Experience**: Trải nghiệm mua sắm mượt mà
- **Personalization**: Cá nhân hóa theo người dùng
- **Social Features**: Tính năng xã hội (reviews, wishlist)
- **Payment Integration**: Tích hợp thanh toán
- **Order Tracking**: Theo dõi đơn hàng
- **Customer Support**: Hỗ trợ khách hàng

📌 COMMON PATTERNS
--------------------------------------------------------------------------------
- **CRUD Operations**: Create, Read, Update, Delete
- **Search & Filter**: Tìm kiếm và lọc dữ liệu
- **Pagination**: Phân trang cho danh sách lớn
- **Modal Dialogs**: Popup cho forms và confirmations
- **Toast Notifications**: Thông báo ngắn gọn
- **Loading States**: Trạng thái loading
- **Error Handling**: Xử lý lỗi graceful
- **Form Validation**: Validation forms
- **File Upload**: Upload files và images
- **Export/Print**: Xuất dữ liệu và in ấn

================================================================================
